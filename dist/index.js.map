{"version":3,"sources":["../node_modules/.pnpm/tsup@8.0.1_typescript@5.3.3/node_modules/tsup/assets/cjs_shims.js","../src/index.ts"],"sourcesContent":["// Shim globals in cjs bundle\n// There's a weird bug that esbuild will always inject importMetaUrl\n// if we export it as `const importMetaUrl = ... __filename ...`\n// But using a function will not cause this issue\n\nconst getImportMetaUrl = () =>\n  typeof document === 'undefined'\n    ? new URL('file:' + __filename).href\n    : (document.currentScript && document.currentScript.src) ||\n      new URL('main.js', document.baseURI).href\n\nexport const importMetaUrl = /* @__PURE__ */ getImportMetaUrl()\n","#!/usr/bin/env node\n\nimport path from \"node:path\";\nimport {fileURLToPath} from \"node:url\";\nimport {cp, readFile, writeFile} from \"node:fs/promises\";\nimport {glob} from \"glob\";\nimport color from \"picocolors\";\nimport prompts from \"prompts\";\nimport yargs from \"yargs\";\nimport {hideBin} from \"yargs/helpers\";\n\n// List of templates\nconst TEMPLATES = [\n  {\n    title: \"Next.js + ESLint + TypeScript + Shadcn/ui\",\n    value: \"next-eslint-ts-shadcn\",\n  },\n  {\n    title: \"Next.js + ESLint + TypeScript + Tailwind\",\n    value: \"next-eslint-ts-tw\",\n  },\n  {\n    title: \"React (vite) + ESLint + TypeScript + Tailwind\",\n    value: \"react-eslint-ts-tw\",\n  },\n];\n\n// List of extras\nconst EXTRAS = {\n  \"next-eslint-ts-shadcn\": [\n    {\n      title: \"Mercado Pago\",\n      value: \"mercadopago\",\n    },\n    {\n      title: \"Clerk Auth\",\n      value: \"clerk\",\n    },\n  ],\n};\n\n// Specify CLI arguments\nconst args = yargs(hideBin(process.argv)).options({\n  name: {\n    alias: \"n\",\n    type: \"string\",\n    description: \"Name of the project\",\n  },\n  template: {\n    alias: \"t\",\n    type: \"string\",\n    description: \"Template to use\",\n  },\n});\n\n// Orverride arguments passed on the CLI\nprompts.override(args.argv);\n\nasync function main() {\n  const project = await prompts(\n    [\n      {\n        type: \"text\",\n        name: \"name\",\n        message: \"What is the name of your project?\",\n        initial: args.argv._[0] || \"appncy-project\",\n        // validate: (value) => {\n        //   if (value.match(/[^a-zA-Z0-9-_]+/g))\n        //     return \"Project name can only contain letters, numbers, dashes and underscores\";\n\n        //   return true;\n        // },\n      },\n      {\n        type: \"select\",\n        name: \"template\",\n        message: `Which template would you like to use?`,\n        initial: args.argv._[1] || 0,\n        choices: TEMPLATES,\n      },\n    ],\n    {\n      onCancel: () => {\n        console.log(\"\\nBye ðŸ‘‹\\n\");\n\n        process.exit(0);\n      },\n    },\n  );\n\n  // Get the template folder for the selected template\n  const template = path.join(\n    path.dirname(fileURLToPath(import.meta.url)),\n    \"templates\",\n    project.template,\n  );\n\n  // Get the destination folder for the project\n  const destination = path.join(process.cwd(), project.name);\n\n  // Copy files from the template folder to the current directory\n  await cp(path.join(template, \"project\"), destination, {recursive: true});\n\n  // Get the extras for the selected template\n  if (EXTRAS[project.template]) {\n    const {extras} = await prompts({\n      type: \"multiselect\",\n      name: \"extras\",\n      message: \"Which extras would you like to add?\",\n      instructions: false,\n      choices: EXTRAS[project.template],\n    });\n\n    for await (const extra of extras) {\n      // Copy files from the extra folder to the current directory\n      await cp(path.join(template, \"extras\", extra), destination, {recursive: true});\n    }\n  }\n\n  // Get all files from the destination folder\n  const files = await glob(`**/*`, {nodir: true, cwd: destination, absolute: true});\n\n  // Read each file and replace the tokens\n  for await (const file of files) {\n    const data = await readFile(file, \"utf8\");\n    const draft = data.replace(/{{name}}/g, project.name);\n\n    await writeFile(file, draft, \"utf8\");\n  }\n\n  // Log outro message\n  console.log(\"âœ¨ Project created âœ¨\");\n  console.log(`\\n${color.yellow(`Next steps:`)}\\n`);\n  console.log(`${color.green(`cd`)} ${project.name}`);\n  console.log(`${color.green(`pnpm`)} install`);\n  console.log(`${color.green(`pnpm`)} dev`);\n  console.log(\"\\n---\\n\");\n  console.log(`Questions ðŸ‘€? ${color.underline(color.cyan(\"https://x.com/goncy\"))}`);\n}\n\nmain().catch(console.error);\n"],"mappings":"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","names":["yargs","prompts","path","color"]}