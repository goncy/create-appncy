{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "eslint-next-ts-tailwind",
  "type": "registry:item",
  "title": "ESLint - Next.js + TypeScript + TailwindCSS",
  "description": "ESLint configuration for Next.js, TypeScript, and TailwindCSS projects",
  "devDependencies": [
    "@eslint/js",
    "@eslint-react/eslint-plugin",
    "@eslint/eslintrc",
    "@next/eslint-plugin-next",
    "@stylistic/eslint-plugin",
    "eslint",
    "eslint-config-prettier",
    "eslint-plugin-import",
    "eslint-plugin-jsx-a11y",
    "eslint-plugin-prettier",
    "eslint-plugin-react",
    "eslint-plugin-react-compiler",
    "eslint-import-resolver-typescript",
    "prettier",
    "prettier-plugin-tailwindcss",
    "typescript-eslint"
  ],
  "files": [
    {
      "path": "templates/next-eslint-ts-shadcn/project/eslint.config.mjs",
      "content": "import {FlatCompat} from \"@eslint/eslintrc\";\r\nimport {defineConfig} from \"eslint/config\";\r\nimport tseslint from \"typescript-eslint\";\r\nimport eslintJs from \"@eslint/js\";\r\nimport eslintReact from \"@eslint-react/eslint-plugin\";\r\nimport eslintPluginPrettierRecommended from \"eslint-plugin-prettier/recommended\";\r\nimport eslintPluginImport from \"eslint-plugin-import\";\r\nimport eslintPluginReactCompiler from \"eslint-plugin-react-compiler\";\r\nimport eslintPluginJsxA11y from \"eslint-plugin-jsx-a11y\";\r\nimport eslintPluginReact from \"eslint-plugin-react\";\r\nimport eslintPluginStylistic from \"@stylistic/eslint-plugin\";\r\n\r\nconst compat = new FlatCompat({\r\n  baseDirectory: import.meta.dirname,\r\n});\r\n\r\nconst languageLintingConfig = tseslint.config(\r\n  {\r\n    files: [\"**/*.{ts,tsx,js,mjs,cjs}\"],\r\n    languageOptions: {\r\n      parser: tseslint.parser,\r\n      parserOptions: {\r\n        projectService: {\r\n          allowDefaultProject: [\"*.js\", \"*.mjs\", \"*.cjs\"],\r\n        },\r\n        tsconfigRootDir: import.meta.dirname,\r\n      },\r\n    },\r\n  },\r\n  eslintJs.configs.recommended,\r\n  tseslint.configs.strictTypeChecked,\r\n  tseslint.configs.stylisticTypeChecked,\r\n  eslintPluginStylistic.configs.recommended,\r\n  {\r\n    rules: {\r\n      \"no-console\": [\"warn\", {allow: [\"error\"]}],\r\n      \"@stylistic/padding-line-between-statements\": [\r\n        \"warn\",\r\n        {blankLine: \"always\", prev: \"*\", next: [\"return\", \"export\"]},\r\n        {blankLine: \"always\", prev: [\"const\", \"let\", \"var\"], next: \"*\"},\r\n        {\r\n          blankLine: \"any\",\r\n          prev: [\"const\", \"let\", \"var\"],\r\n          next: [\"const\", \"let\", \"var\"],\r\n        },\r\n      ],\r\n      \"@typescript-eslint/no-unused-vars\": [\r\n        \"warn\",\r\n        {\r\n          args: \"after-used\",\r\n          ignoreRestSiblings: false,\r\n          argsIgnorePattern: \"^_.*?$\",\r\n          caughtErrorsIgnorePattern: \"^_.*?$\",\r\n        },\r\n      ],\r\n      \"@typescript-eslint/no-unsafe-member-access\": \"off\",\r\n      \"@typescript-eslint/no-confusing-void-expression\": \"off\",\r\n      \"@typescript-eslint/ban-ts-comment\": \"off\",\r\n      \"@typescript-eslint/no-explicit-any\": \"off\",\r\n      \"@typescript-eslint/no-inferrable-types\": \"off\",\r\n      // Optionals\r\n      // \"@typescript-eslint/no-floating-promises\": \"off\",\r\n      // \"@typescript-eslint/no-non-null-assertion\": \"off\",\r\n    },\r\n  },\r\n);\r\n\r\nconst reactLintingConfig = defineConfig([\r\n  {\r\n    files: [\"**/*.{tsx,jsx}\"],\r\n    settings: {\r\n      react: {\r\n        version: \"detect\",\r\n      },\r\n    },\r\n  },\r\n  eslintPluginReact.configs.flat.recommended,\r\n  eslintPluginReact.configs.flat[\"jsx-runtime\"],\r\n  eslintReact.configs[\"recommended-type-checked\"],\r\n  eslintPluginReactCompiler.configs.recommended,\r\n  {\r\n    rules: {\r\n      \"@eslint-react/no-useless-fragment\": \"error\",\r\n      \"@eslint-react/no-missing-key\": \"warn\",\r\n      \"react/no-array-index-key\": \"off\",\r\n      \"react/self-closing-comp\": \"warn\",\r\n      \"react/jsx-curly-brace-presence\": [\"error\", {props: \"never\", children: \"never\"}],\r\n      \"react/jsx-sort-props\": [\r\n        \"warn\",\r\n        {\r\n          callbacksLast: true,\r\n          shorthandFirst: true,\r\n          noSortAlphabetically: false,\r\n          reservedFirst: true,\r\n        },\r\n      ],\r\n    },\r\n  },\r\n]);\r\n\r\nconst reactA11yLintingConfig = defineConfig([\r\n  {\r\n    files: [\"**/*.{tsx,jsx}\"],\r\n  },\r\n  eslintPluginJsxA11y.flatConfigs.recommended,\r\n  {\r\n    rules: {\r\n      \"jsx-a11y/click-events-have-key-events\": \"off\",\r\n    },\r\n  },\r\n]);\r\n\r\nconst nextLintingConfig = defineConfig([\r\n  {\r\n    files: [\"**/*.{tsx,jsx}\"],\r\n  },\r\n  compat.extends(\"plugin:@next/next/recommended\"),\r\n  {\r\n    rules: {\r\n      \"@next/next/no-img-element\": \"off\",\r\n    },\r\n  },\r\n]);\r\n\r\nconst importLintingConfig = defineConfig([\r\n  {\r\n    files: [\"**/*.{ts,tsx,js,mjs,cjs}\"],\r\n  },\r\n  {\r\n    settings: {\r\n      \"import/resolver\": {\r\n        typescript: true,\r\n        node: true,\r\n      },\r\n    },\r\n  },\r\n  eslintPluginImport.flatConfigs.recommended,\r\n  eslintPluginImport.flatConfigs.typescript,\r\n  {\r\n    rules: {\r\n      \"import/no-default-export\": \"off\",\r\n      \"import/no-named-as-default-member\": \"off\",\r\n      \"import/named\": \"off\",\r\n      \"import/namespace\": \"off\",\r\n      \"import/default\": \"off\",\r\n      \"import/no-unresolved\": \"off\",\r\n      \"import/order\": [\r\n        \"warn\",\r\n        {\r\n          groups: [\r\n            \"type\",\r\n            \"builtin\",\r\n            \"object\",\r\n            \"external\",\r\n            \"internal\",\r\n            \"parent\",\r\n            \"sibling\",\r\n            \"index\",\r\n          ],\r\n          pathGroups: [\r\n            {\r\n              pattern: \"@/*\",\r\n              group: \"external\",\r\n              position: \"after\",\r\n            },\r\n          ],\r\n          \"newlines-between\": \"always\",\r\n        },\r\n      ],\r\n    },\r\n  },\r\n]);\r\n\r\nconst prettierLintingConfig = defineConfig([\r\n  {\r\n    files: [\"**/*.{ts,tsx,js,mjs,cjs}\"],\r\n  },\r\n  eslintPluginPrettierRecommended,\r\n  {\r\n    rules: {\r\n      \"prettier/prettier\": [\r\n        \"warn\",\r\n        {\r\n          printWidth: 100,\r\n          trailingComma: \"all\",\r\n          tabWidth: 2,\r\n          semi: true,\r\n          singleQuote: false,\r\n          bracketSpacing: false,\r\n          arrowParens: \"always\",\r\n          endOfLine: \"auto\",\r\n          plugins: [\"prettier-plugin-tailwindcss\"],\r\n        },\r\n      ],\r\n    },\r\n  },\r\n]);\r\n\r\nexport default defineConfig([\r\n  languageLintingConfig,\r\n  reactLintingConfig,\r\n  reactA11yLintingConfig,\r\n  nextLintingConfig,\r\n  importLintingConfig,\r\n  prettierLintingConfig,\r\n]);\r\n",
      "type": "registry:file",
      "target": "~/eslint.config.mjs"
    }
  ]
}